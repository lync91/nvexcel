{"version":3,"sources":["../../src/components/Button/DefaultButton/DefaultButton.styles.ts","../../src/components/Button/ButtonThemes.ts","../../src/components/Button/DefaultButton/DefaultButton.tsx","../../src/components/Separator/Separator.base.tsx","../../src/components/Separator/Separator.tsx","../../src/components/Separator/Separator.styles.ts","../../src/components/Label/Label.base.tsx","../../src/components/Label/Label.tsx","../../src/components/Label/Label.styles.ts","components/CharConvert.tsx"],"names":["getStyles","memoize","theme","customStyles","primary","baseButtonStyles","splitButtonStyles","defaultButtonStyles","root","minWidth","height","label","fontWeight","semibold","p","palette","s","semanticColors","backgroundColor","primaryButtonBackground","border","color","primaryButtonText","selectors","borderColor","MsHighContrastAdjust","outlineColor","white","rootHovered","primaryButtonBackgroundHovered","primaryButtonTextHovered","rootPressed","primaryButtonBackgroundPressed","primaryButtonTextPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","splitButtonContainer","splitButtonDivider","position","width","right","top","bottom","splitButtonMenuButton","splitButtonMenuButtonDisabled","primaryButtonBackgroundDisabled","splitButtonMenuButtonChecked","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","neutralTertiary","primaryStyles","buttonBackground","buttonBackgroundPressed","buttonBackgroundHovered","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","neutralLight","buttonBackgroundDisabled","neutralTertiaryAlt","splitButtonDividerDisabled","neutralQuaternaryAlt","buttonTextDisabled","standardStyles","render","styles","BaseButton","this","props","variantClassName","onRenderDescription","DefaultButton","customizable","getClassNames","classNamesFunction","Separator","styled","className","vertical","alignContent","_classNames","content","role","children","alignStart","alignCenter","alignEnd","fonts","medium","textAlign","verticalAlign","padding","display","zIndex","neutralLighter","left","bodyText","background","bodyBackground","undefined","scope","cacheSize","as","disabled","required","classNames","RootType","Label","labelFontWeight","labelColor","labelDisabledColor","disabledBodyText","labelRequiredStarColor","errorText","boxSizing","boxShadow","margin","wordWrap","overflowWrap","paddingRight","dropdownStyles","dropdown","options","key","text","CharConvert","_convertTo","a","Excel","run","context","range","workbook","getSelectedRange","load","sync","console","log","address","values","error","_srcChanged","option","_index","_descChanged","state","srcKey","descKey","placeholder","selectedKey","onChanged","onClick","allowDisabledFocus","Component"],"mappings":"yNAQA,IAGaA,EAAY,OAAAC,EAAA,IACvB,SAACC,EAAeC,EAA8BC,GAC5C,IAAMC,EAAkC,YAAoBH,GACtDI,EAAmC,YAAqBJ,GACxDK,EAAqC,CACzCC,KAAM,CACJC,SARyB,OASzBC,OAVsB,QAYxBC,MAAO,CACLC,WAAY,IAAYC,WAI5B,OAAO,YACLR,EACAE,EACAH,ECwHA,SAAwBF,G,sBACpBY,EAAA,EAAAC,QAAYC,EAAA,EAAAC,eAEpB,MAAO,CACLT,KAAM,CACJU,gBAAiBF,EAAEG,wBACnBC,OAAQ,aAAaJ,EAAEG,wBACvBE,MAAOL,EAAEM,kBACTC,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,SACPH,gBAAiB,aACjBM,YAAa,aACbC,qBAAsB,QAExB,EAAC,IAAI,IAAuB,YAAa,CACvCF,UAAW,CACT,SAAU,CACRH,OAAQ,OACRM,aAAcZ,EAAEa,SAIvB,IAGHC,YAAa,CACXV,gBAAiBF,EAAEa,+BACnBT,OAAQ,aAAaJ,EAAEa,+BACvBR,MAAOL,EAAEc,yBACTP,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,SACPH,gBAAiB,YACjBM,YAAa,aAEhB,IAGHO,YAAa,CACXb,gBAAiBF,EAAEgB,+BACnBZ,OAAQ,aAAaJ,EAAEgB,+BACvBX,MAAOL,EAAEiB,yBACTV,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,SACPH,gBAAiB,aACjBM,YAAa,aACbC,qBAAsB,QAEzB,IAGHS,aAAc,CACZhB,gBAAiBF,EAAEgB,+BACnBX,MAAOL,EAAEiB,0BAGXE,YAAa,CACXjB,gBAAiBF,EAAEgB,+BACnBX,MAAOL,EAAEiB,0BAGXG,mBAAoB,CAClBlB,gBAAiBF,EAAEgB,+BACnBX,MAAOL,EAAEiB,0BAGXI,aAAc,CACZd,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,WACPG,YAAa,WACbN,gBAAiB,UAEpB,IAIHoB,qBAAsB,CACpBf,WAAS,KACP,EAAC,KAAuB,CACtBH,OAAQ,QAEX,IAGHmB,mBAAoB,OAAF,IAAE,CAAF,eAtOb,CACLC,SAAU,WACVC,MAAO,EACPC,MAAO,GACPC,IAAK,EACLC,OAAQ,IAkO2B,CACjC1B,gBAAiBJ,EAAEa,MACnBJ,WAAS,KACP,EAAC,KAAuB,CACtBL,gBAAiB,UAGtB,KAED2B,sBAAuB,CACrB3B,gBAAiBF,EAAEG,wBACnBE,MAAOL,EAAEM,kBACTC,WAAS,KACP,EAAC,KAAuB,CACtBL,gBAAiB,cAEnB,YAAU,CACRA,gBAAiBF,EAAEa,+BACnBN,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,aAEV,IAEJ,IAGHyB,8BAA+B,CAC7B5B,gBAAiBF,EAAE+B,gCACnBxB,UAAW,CACT,SAAU,CACRL,gBAAiBF,EAAE+B,mCAKzBC,6BAA8B,CAC5B9B,gBAAiBF,EAAEgB,+BACnBT,UAAW,CACT,SAAU,CACRL,gBAAiBF,EAAEgB,kCAKzBiB,8BAA+B,CAC7B/B,gBAAiBF,EAAEgB,+BACnBT,UAAW,CACT,SAAU,CACRL,gBAAiBF,EAAEgB,kCAKzBkB,oBAAqB,CACnB7B,MAAOL,EAAEM,mBAGX6B,4BAA6B,CAC3B9B,MAAOP,EAAEsC,gBAET7B,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,YAEV,KDjRSgC,CAAcnD,GCdxB,SAAyBA,G,cACrBc,EAAA,EAAAC,eAAmBH,EAAA,EAAAC,QAErBuC,EAAmBtC,EAAEsC,iBACrBC,EAA0BvC,EAAEuC,wBAC5BC,EAA0BxC,EAAEwC,wBAE5BC,EAAazC,EAAEyC,WACfC,EAAoB1C,EAAE0C,kBACtBC,EAAoB3C,EAAE2C,kBACtBC,EAA2B5C,EAAE4C,yBAEnC,MAAO,CACLpD,KAAM,CACJU,gBAAiBoC,EACjBjC,MAAOoC,GAGT7B,YAAa,CACXV,gBAAiBsC,EACjBnC,MAAOqC,EACPnC,WAAS,KACP,EAAC,KAAuB,CACtBC,YAAa,YACbH,MAAO,aAEV,IAGHU,YAAa,CACXb,gBAAiBqC,EACjBlC,MAAOsC,GAGTzB,aAAc,CACZhB,gBAAiBqC,EACjBlC,MAAOsC,GAGTxB,YAAa,CACXjB,gBAAiBqC,EACjBlC,MAAOsC,GAGTvB,mBAAoB,CAClBlB,gBAAiBqC,EACjBlC,MAAOuC,GAGTvB,aAAc,CACZd,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,WACPG,YAAa,WACbN,gBAAiB,UAEpB,IAIHoB,qBAAsB,CACpBf,WAAS,KACP,EAAC,KAAuB,CACtBH,OAAQ,QAEX,IAGHyB,sBAAuB,CACrBxB,MAAOP,EAAEa,MACTT,gBAAiB,cACjBK,UAAW,CACT,SAAU,CACRL,gBAAiBJ,EAAE+C,aACnBtC,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,aAEV,MAKPyB,8BAA+B,CAC7B5B,gBAAiBF,EAAE8C,yBACnBvC,UAAW,CACT,SAAU,CACRL,gBAAiBF,EAAE8C,4BAKzBvB,mBAAoB,OAAF,IAAE,CAAF,eArGb,CACLC,SAAU,WACVC,MAAO,EACPC,MAAO,GACPC,IAAK,EACLC,OAAQ,IAiG2B,CACjC1B,gBAAiBJ,EAAEiD,mBACnBxC,WAAS,KACP,EAAC,KAAuB,CACtBL,gBAAiB,cAGtB,KAED8C,2BAA4B,CAC1B9C,gBAAiBhB,EAAMa,QAAQgD,oBAGjCf,6BAA8B,CAC5B9B,gBAAiBJ,EAAEmD,qBACnB1C,UAAW,CACT,SAAU,CACRL,gBAAiBJ,EAAEmD,wBAKzBhB,8BAA+B,CAC7B/B,gBAAiBJ,EAAEmD,qBACnB1C,UAAW,CACT,SAAU,CACRL,gBAAiBJ,EAAEmD,wBAKzBf,oBAAqB,CACnB7B,MAAOL,EAAEyC,YAGXN,4BAA6B,CAC3B9B,MAAOL,EAAEkD,qBDnHwBC,CAAejE,GAChDI,EACAH,MEpBN,2B,+CAaA,OAbmC,iBAC1B,YAAAiE,OAAP,WACQ,iBAAE,IAAAhE,eAAA,IAAU,GAAV,EAAiBiE,EAAA,EAAAA,OAAQnE,EAAA,EAAAA,MAEjC,OACE,gBAACoE,EAAA,EAAU,eACLC,KAAKC,MAAK,CACdC,iBAAkBrE,EAAU,qBAAuB,qBACnDiE,OAAQrE,EAAUE,EAAQmE,EAAQjE,GAClCsE,oBAAqB,QAThBC,EAAa,aADzB,OAAAC,EAAA,GAAa,gBAAiB,CAAC,QAAS,WAAW,IACvCD,GAAb,CAAmC,c,gGCN7BE,EAAgB,OAAAC,EAAA,KCETC,EAAsD,OAAAC,EAAA,IDAI,SAACR,GAC9D,IAAAH,EAAA,EAAAA,OAAQnE,EAAA,EAAAA,MAAO+E,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAAUC,EAAA,EAAAA,aAEtCC,EAAcP,EAAcR,EAAS,CACzCnE,MAAOA,EACP+E,UAAS,EACTE,aAAcA,EACdD,SAAUA,IAGZ,OACE,uBAAKD,UAAWG,EAAY5E,MAC1B,uBAAKyE,UAAWG,EAAYC,QAASC,KAAK,YAAW,mBAAmBJ,EAAW,WAAa,cAC7FV,EAAMe,cEjBU,SAACf,GAChB,IAAAtE,EAAA,EAAAA,MAAOiF,EAAA,EAAAA,aAAcD,EAAA,EAAAA,SAAUD,EAAA,EAAAA,UAEjCO,EAA8B,UAAjBL,EACbM,EAA+B,WAAjBN,EACdO,EAA4B,QAAjBP,EAEjB,MAAO,CACL3E,KAAM,CACJN,EAAMyF,MAAMC,OACZ,CACEpD,SAAU,YAEZ2C,GAAgB,CACdU,UAAWV,IAEZA,GAAgB,CACfU,UAAW,UAEbX,IACGO,IAAgBN,IAAiB,CAChCW,cAAe,UAEnBZ,GACEM,GAAc,CACZM,cAAe,OAEnBZ,GACEQ,GAAY,CACVI,cAAe,UAEnBZ,GAAY,CACVa,QAAS,QACTrF,OAAQ,UACRsF,QAAS,aACTC,OAAQ,EACR1E,UAAW,CACT,SAAU,CACRL,gBAAiBhB,EAAMa,QAAQmF,eAC/BzD,MAAO,MACP4C,QAAS,KACT7C,SAAU,WACVG,IAAK,IACLC,OAAQ,IACRuD,KAAM,MACNzD,MAAO,IACPuD,QAAS,MAIdf,GAAY,CACXa,QAAS,QACTxE,UAAW,CACT,UAAW,CACTL,gBAAiBhB,EAAMa,QAAQmF,eAC/BxF,OAAQ,MACR2E,QAAS,KACTW,QAAS,QACTxD,SAAU,WACVG,IAAK,MACLC,OAAQ,IACRuD,KAAM,IACNzD,MAAO,OAIbuC,GAEFI,QAAS,CACP,CACE7C,SAAU,WACVwD,QAAS,eACTD,QAAS,SACT1E,MAAOnB,EAAMe,eAAemF,SAC5BC,WAAYnG,EAAMe,eAAeqF,gBAEnCpB,GAAY,CACVa,QAAS,mBDrEWQ,EAAW,CACrCC,MAAO,e,+GENH3B,EAAgB,OAAAC,EAAA,GAAmD,CAIvE2B,UAAW,MAGb,2B,+CAeA,OAf+B,iBACtB,YAAArC,OAAP,WACQ,iBAAE,IAAAsC,GAAA,uBAAwBnB,EAAA,EAAAA,SAAUN,EAAA,EAAAA,UAAW0B,EAAA,EAAAA,SAAUtC,EAAA,EAAAA,OAAQuC,EAAA,EAAAA,SAAU1G,EAAA,EAAAA,MAC3E2G,EAAahC,EAAcR,EAAQ,CACvCY,UAAS,EACT0B,SAAQ,EACRC,SAAQ,EACR1G,MAAOA,IAET,OACE,gBAAC4G,EAAQ,eAAK,YAAevC,KAAKC,MAAO,KAAc,CAAES,UAAW4B,EAAWrG,OAC5E+E,IAIT,EAfA,CAA+B,a,OCNlBwB,EAA8C,OAAA/B,EAAA,GACzD,GCJuB,SAACR,G,MAChBtE,EAAA,EAAAA,MAAO+E,EAAA,EAAAA,UAAW0B,EAAA,EAAAA,SAAUC,EAAA,EAAAA,SAC5B3F,EAAA,EAAAA,eAGF+F,EAAkB,IAAYnG,SAC9BoG,EAAahG,EAAemF,SAC5Bc,EAAqBjG,EAAekG,iBACpCC,EAAyBnG,EAAeoG,UAE9C,MAAO,CACL7G,KAAM,CACJ,WACAN,EAAMyF,MAAMC,OACZ,CACEhF,WAAYoG,EACZ3F,MAAO4F,EACPK,UAAW,aACXC,UAAW,OACXC,OAAQ,EACRxB,QAAS,QACTD,QAAS,QACT0B,SAAU,aACVC,aAAc,cAEhBf,GAAY,CACVtF,MAAO6F,EACP3F,WAAS,KACP,EAAC,KAAuB,CACtBF,MAAO,YAEV,IAEHuF,GAAY,CACVrF,UAAW,CACT,UAAW,CACT8D,QAAS,OACThE,MAAO+F,EACPO,aAAc,MAIpB1C,WDpCJsB,EACA,CACEC,MAAO,W,0LEWLoB,EAA2C,CAChDC,SAAU,CAAEpF,MAAO,MAGdqF,EAA6B,CAClC,CAAEC,IAAK,UAAWC,KAAM,WACxB,CAAED,IAAK,iBAAkBC,KAAM,kBAC/B,CAAED,IAAK,QAASC,KAAM,SACtB,CAAED,IAAK,aAAcC,KAAM,cAC3B,CAAED,IAAK,UAAWC,KAAM,WACxB,CAAED,IAAK,SAAUC,KAAM,UACvB,CAAED,IAAK,SAAUC,KAAM,UACvB,CAAED,IAAK,UAAWC,KAAM,WACxB,CAAED,IAAK,OAAQC,KAAM,SAGTC,EAAb,kDACC,WAAYzD,GAAa,IAAD,8BACjB,cAAMA,IAQb0D,WATwB,sBASX,sBAAAC,EAAA,+EAELC,MAAMC,IAAN,uCAAU,WAAMC,GAAN,eAAAH,EAAA,6DAITI,EAAQD,EAAQE,SAASC,oBAGzBC,KAAK,WACXH,EAAMG,KAAK,UARI,SAUTJ,EAAQK,OAVC,OAWfC,QAAQC,IAAR,gCAAqCN,EAAMO,QAA3C,MACAF,QAAQC,IAAIN,EAAMQ,QAZH,2CAAV,uDAFK,sDAoBXH,QAAQI,MAAR,MApBW,wDATW,EAiCxBC,YAAc,SAACC,EAAyBC,KAjChB,EAoCxBC,aAAe,SAACF,EAAyBC,KAlClC,EAAKE,MAAQ,CACTC,OAAQ,UACRC,QAAS,WAJI,EADzB,mGA0CE,OACC,6BAAStE,UAAU,WAClB,kBAAC,IAAD,CAAUuE,YAAY,oCAAoB7I,MAAM,0BAAe8I,YAAalF,KAAK8E,MAAMC,OAAQxB,QAASA,EAASzD,OAAQuD,EAAgB8B,UAAWnF,KAAK0E,cACzJ,kBAAC,IAAD,CAAUO,YAAY,wCAAsB7I,MAAM,yBAAiB8I,YAAalF,KAAK8E,MAAME,QAASzB,QAASA,EAASzD,OAAQuD,EAAgB8B,UAAWnF,KAAK6E,eAC9J,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAepB,KAAK,oBAAY2B,QAASpF,KAAK2D,WAAY0B,oBAAkB,SA/ChF,GAAiCC,aA0DlB5B","file":"static/js/6.0d9504c5.chunk.js","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n","import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './DefaultButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('DefaultButton', ['theme', 'styles'], true)\nexport class DefaultButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--primary' : 'ms-Button--default'}\n        styles={getStyles(theme!, styles, primary)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { ISeparatorProps, ISeparatorStyles, ISeparatorStyleProps } from './Separator.types';\n\nconst getClassNames = classNamesFunction<ISeparatorStyleProps, ISeparatorStyles>();\n\nexport const SeparatorBase: React.FunctionComponent<ISeparatorProps> = (props: ISeparatorProps): JSX.Element => {\n  const { styles, theme, className, vertical, alignContent } = props;\n\n  const _classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    alignContent: alignContent,\n    vertical: vertical,\n  });\n\n  return (\n    <div className={_classNames.root}>\n      <div className={_classNames.content} role=\"separator\" aria-orientation={vertical ? 'vertical' : 'horizontal'}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ISeparatorProps, ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\nimport { getStyles } from './Separator.styles';\nimport { SeparatorBase } from './Separator.base';\n\nexport const Separator: React.FunctionComponent<ISeparatorProps> = styled<\n  ISeparatorProps,\n  ISeparatorStyleProps,\n  ISeparatorStyles\n>(SeparatorBase, getStyles, undefined, {\n  scope: 'Separator',\n});\n","import { ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\n\nexport const getStyles = (props: ISeparatorStyleProps): ISeparatorStyles => {\n  const { theme, alignContent, vertical, className } = props;\n\n  const alignStart = alignContent === 'start';\n  const alignCenter = alignContent === 'center';\n  const alignEnd = alignContent === 'end';\n\n  return {\n    root: [\n      theme.fonts.medium,\n      {\n        position: 'relative',\n      },\n      alignContent && {\n        textAlign: alignContent,\n      },\n      !alignContent && {\n        textAlign: 'center',\n      },\n      vertical &&\n        (alignCenter || !alignContent) && {\n          verticalAlign: 'middle',\n        },\n      vertical &&\n        alignStart && {\n          verticalAlign: 'top',\n        },\n      vertical &&\n        alignEnd && {\n          verticalAlign: 'bottom',\n        },\n      vertical && {\n        padding: '0 4px',\n        height: 'inherit',\n        display: 'table-cell',\n        zIndex: 1,\n        selectors: {\n          ':after': {\n            backgroundColor: theme.palette.neutralLighter,\n            width: '1px',\n            content: '\"\"',\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            left: '50%',\n            right: '0',\n            zIndex: -1,\n          },\n        },\n      },\n      !vertical && {\n        padding: '4px 0',\n        selectors: {\n          ':before': {\n            backgroundColor: theme.palette.neutralLighter,\n            height: '1px',\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: '50%',\n            bottom: '0',\n            left: '0',\n            right: '0',\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      {\n        position: 'relative',\n        display: 'inline-block',\n        padding: '0 12px',\n        color: theme.semanticColors.bodyText,\n        background: theme.semanticColors.bodyBackground,\n      },\n      vertical && {\n        padding: '12px 0',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const Label: React.FunctionComponent<ILabelProps> = styled<ILabelProps, ILabelStyleProps, ILabelStyles>(\n  LabelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Label',\n  },\n);\n","import { HighContrastSelector, FontWeights } from '../../Styling';\nimport { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","import React, { Component } from \"react\";\r\nimport { Dropdown, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { PrimaryButton } from 'office-ui-fabric-react';\r\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\r\n// import { connect } from \"react-redux\";\r\n// import { CHANGE_SRC_KEY, CHANGE_DESC_KEY } from \"../constants/actions\";\r\n// import * as conV from \"./vietuni\";\r\n\r\nexport interface HeaderProps {\r\n\ttitle: string;\r\n\tlogo: string;\r\n\tmessage: string;\r\n}\r\n\r\nexport interface AppProps {\r\n}\r\n\r\nexport interface AppStates {\r\n    srcKey: string;\r\n\tdescKey: string;\r\n}\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n\tdropdown: { width: 300 }\r\n};\r\n\r\nconst options: IDropdownOption[] = [\r\n\t{ key: \"UNICODE\", text: \"UNICODE\" },\r\n\t{ key: \"Unicode to hop\", text: \"Unicode to hop\" },\r\n\t{ key: \"UTF-8\", text: \"UTF-8\" },\r\n\t{ key: \"&#Unicode;\", text: \"&#Unicode;\" },\r\n\t{ key: \"VNI-WIN\", text: \"VNI-WIN\" },\r\n\t{ key: \"TCVN-3\", text: \"TCVN-3\" },\r\n\t{ key: \"VISCII\", text: \"VISCII\" },\r\n\t{ key: \"VPS-Win\", text: \"VPS-Win\" },\r\n\t{ key: \"VIQR\", text: \"VIQR\" }\r\n];\r\n\r\nexport class CharConvert extends Component<AppProps, AppStates> {\r\n\tconstructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            srcKey: \"VNI-WIN\",\r\n            descKey: \"UNICODE\"\r\n        }\r\n\t}\r\n\tcomponentWillMount() {\r\n\t}\r\n\t_convertTo = async () => {\r\n\t\ttry {\r\n\t\t\tawait Excel.run(async context => {\r\n\t\t\t\t/**\r\n\t\t\t\t * Insert your Excel code here\r\n\t\t\t\t */\r\n\t\t\t\tconst range = context.workbook.getSelectedRange();\r\n\r\n\t\t\t\t// Read the range address\r\n\t\t\t\trange.load(\"address\");\r\n\t\t\t\trange.load(\"values\");\r\n\r\n\t\t\t\tawait context.sync();\r\n\t\t\t\tconsole.log(`The range address was ${range.address}.`);\r\n\t\t\t\tconsole.log(range.values);\r\n\t\t\t\t// const newValues = window['convertTo'](JSON.stringify(range.values), this.props.srcKey, this.props.descKey);\r\n\t\t\t\t\r\n\t\t\t\t// range.values = JSON.parse(newValues);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\r\n\t}\r\n\t_srcChanged = (option: IDropdownOption, _index?: number) => {\r\n\t\t// this.props.dispatch({ type: CHANGE_SRC_KEY, srcKey: option.key })\r\n\t}\r\n\t_descChanged = (option: IDropdownOption, _index?: number) => {\r\n\t\t// this.props.dispatch({ type: CHANGE_DESC_KEY, descKey: option.key })\r\n\t}\r\n\trender() {\r\n\t\t// const { title, logo, message } = this.props;\r\n\t\treturn (\r\n\t\t\t<section className=\"ms-Grid\">\r\n\t\t\t\t<Dropdown placeholder=\"Chọn mã đang dùng\" label=\"Mã đang dùng\" selectedKey={this.state.srcKey} options={options} styles={dropdownStyles} onChanged={this._srcChanged} />\r\n\t\t\t\t<Dropdown placeholder=\"Chọn mã muốn chuyển\" label=\"Mã chuyển sang\" selectedKey={this.state.descKey} options={options} styles={dropdownStyles} onChanged={this._descChanged} />\r\n\t\t\t\t<Separator />\r\n\t\t\t\t<PrimaryButton text=\"Chuyển mã\" onClick={this._convertTo} allowDisabledFocus />\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n// const mapStateToProps = (state: any) => {\r\n// \treturn {\r\n// \t\tsrcKey: state.charConverter.srcKey,\r\n// \t\tdescKey: state.charConverter.descKey\r\n// \t}\r\n// }\r\nexport default CharConvert"],"sourceRoot":""}