{"version":3,"sources":["history.tsx","components/CommandBarMain.tsx","contexts/AppContext.tsx","components/NavMenu.tsx","components/MenuPanel.tsx","App.tsx","serviceWorker.ts","index.tsx","api/nvExcel.tsx","constants/named.tsx","socket.tsx","api/Eutils.tsx","api/mapIndex.tsx"],"names":["createBrowserHistory","CommandBarMain","props","context","_items","key","text","cacheKey","iconProps","iconName","onClick","view","_overflowItems","console","log","_farItems","ariaLabel","iconOnly","state","CommandBar","items","this","farItems","Component","AppContext","createContext","isOpen","selectedKey","dismissPanel","NavMenu","groups","links","name","url","target","isExpanded","expandAriaLabel","collapseAriaLabel","Consumer","Nav","onLinkClick","e","item","MenuPanel","Panel","onDismiss","type","PanelType","smallFluid","closeButtonAriaLabel","headerText","CharConvert","React","lazy","PageFormat","PageFormatG8","TaoMauKhoiLuong","Home","App","history","location","toString","push","setState","socket","on","data","Provider","value","className","openPanel","bind","fallback","exact","path","component","Boolean","window","hostname","match","initializeIcons","Office","initialize","a","init","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ws","wsObject","BANG_CONG_TRINH","BANG_TONG_HOP_VAT_TU","BANG_HAO_PHI_VAT_TU","HAO_PHI_VAT_TU_NAME","io","getLastCol","getRange","find","completeMatch","matchCase","searchDirection","Excel","SearchDirection","backwards","addressObj","txt","sheet","cell1","col","row","cell2","replace","t","split","wsName","initContext","x","isWsExits","getWorksheet","initWsInfo","create","getActive","lastCol","lastRow","selectedRange","run","rg","workbook","getSelectedRange","load","sync","lastcolAd","address","lastrowAd","newWS","promise","Promise","resolve","rejects","worksheets","getItemOrNullObject","getActiveWorksheet","add","activate","values","formulasR1C1","pageLayout","setPrintArea","fontName","format","font","blackAndWhite","top","bottom","left","right","topMargin","bottomMargin","leftMargin","rightMargin","paperType","paperSize","PaperType","ori","orientation","PageOrientation","hor","ver","centerHorizontally","centerVertically","hoz","zoom","horizontalFitToPages","verticalFitToPages","w","columnWidth","autofitColumns","autofitRows","h","rowHeight","merge","verticalAlignment","horizontalAlignment","bold","wrapText","unmerge","from","to","tbName","valuesMap","forEach","i","sheets","formula","color","italic","border","conditionalFormat","conditionalFormats","ConditionalFormatType","custom","rule","borders","getItem","style","expensesTable","tables","rows","undefined","AsyncConstructor"],"mappings":"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","file":"static/js/main.f2cdd9c2.chunk.js","sourcesContent":["// history.js\r\nimport { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n  /* pass a configuration object here if needed */\r\n})","import React, { Component }  from 'react';\r\nimport { CommandBar, ICommandBarItemProps } from 'office-ui-fabric-react/lib/CommandBar';\r\n// import { IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\n\r\n// const overflowProps: IButtonProps = { ariaLabel: 'More commands' };\r\n\r\nexport default class CommandBarMain extends Component<{view: () => boolean | void}> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n        this.state = {};\r\n      }\r\n    _items: ICommandBarItemProps[] = [\r\n        {\r\n          key: 'newItem',\r\n          text: 'Menu',\r\n          cacheKey: 'myCacheKey', // changing this key will invalidate this item's cache\r\n          iconProps: { iconName: 'GlobalNavButton' },\r\n          onClick: () => this.props.view()\r\n        },\r\n      ];\r\n      \r\n      _overflowItems: ICommandBarItemProps[] = [\r\n        { key: 'move', text: 'Move to...', onClick: () => console.log('Move to'), iconProps: { iconName: 'MoveToFolder' } },\r\n        { key: 'copy', text: 'Copy to...', onClick: () => console.log('Copy to'), iconProps: { iconName: 'Copy' } },\r\n        { key: 'rename', text: 'Rename...', onClick: () => console.log('Rename'), iconProps: { iconName: 'Edit' } }\r\n      ];\r\n      \r\n      _farItems: ICommandBarItemProps[] = [\r\n        {\r\n          key: 'tile',\r\n          text: 'Grid view',\r\n          // This needs an ariaLabel since it's icon-only\r\n          ariaLabel: 'Grid view',\r\n          iconOnly: true,\r\n          iconProps: { iconName: 'Tiles' },\r\n          onClick: () => console.log('Tiles')\r\n        },\r\n        {\r\n          key: 'info',\r\n          text: 'Info',\r\n          // This needs an ariaLabel since it's icon-only\r\n          ariaLabel: 'Info',\r\n          iconOnly: true,\r\n          iconProps: { iconName: 'Info' },\r\n          onClick: () => console.log('Info')\r\n        }\r\n      ];\r\n  render() {\r\n    return (\r\n        <div>\r\n          <CommandBar\r\n            items={this._items}\r\n            // overflowItems={this._overflowItems}\r\n            // overflowButtonProps={overflowProps}\r\n            farItems={this._farItems}\r\n            ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n          />\r\n        </div>\r\n      );\r\n  }\r\n  \r\n};\r\n\r\n\r\n","import { createContext } from \"react\";\r\n  \r\nexport const AppContext = createContext({\r\n    isOpen: true,\r\n    selectedKey: '/home',\r\n    dismissPanel: (key: any) => {}\r\n})","import React, { Component } from 'react';\r\nimport { Nav } from 'office-ui-fabric-react/lib/Nav';\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nexport interface AppProps {\r\n}\r\n\r\nexport interface AppState {\r\n  groups: any[]\r\n}\r\n\r\nclass NavMenu extends Component<AppProps, AppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [\r\n        {\r\n          links: [\r\n            {\r\n              name: 'Dự toán',\r\n              url: '',\r\n              links: [\r\n                {\r\n                  name: 'Activity',\r\n                  url: '',\r\n                  key: 'about',\r\n                  target: '',\r\n                },\r\n                {\r\n                  name: 'MSN',\r\n                  url: '',\r\n                  key: 'key2',\r\n                  target: '',\r\n                }\r\n              ],\r\n              isExpanded: true\r\n            },\r\n            {\r\n              name: 'Khối lượng',\r\n              url: '',\r\n              key: 'key3',\r\n              isExpanded: true,\r\n              links: [\r\n                {\r\n                  name: 'Tạo, sửa mẫu tổng hợp khối lượng',\r\n                  url: '',\r\n                  key: '/TaoMauKhoiLuong',\r\n                  target: '',\r\n                },\r\n                {\r\n                  name: 'MSN',\r\n                  url: '',\r\n                  key: 'key2',\r\n                  target: '',\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              name: 'Công cụ',\r\n              url: '',\r\n              expandAriaLabel: 'Expand Home section',\r\n              collapseAriaLabel: 'Collapse Home section',\r\n              links: [\r\n                {\r\n                  name: 'Định dạng trang in',\r\n                  url: '',\r\n                  key: '/pageFormat',\r\n                  target: '',\r\n                },\r\n                {\r\n                  name: 'Định dạng trang in G8',\r\n                  url: '',\r\n                  key: '/pageFormatG8',\r\n                  target: '',\r\n                },\r\n                {\r\n                  name: 'Chuyển mã tiếng Việt',\r\n                  url: '',\r\n                  key: '/charConvert',\r\n                  target: '',\r\n                },\r\n                {\r\n                  name: 'Công cụ khác',\r\n                  url: '',\r\n                  key: '/otherTools',\r\n                  target: '',\r\n                }\r\n              ],\r\n              isExpanded: true\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {context => (\r\n          <Nav\r\n          onLinkClick={(e, item) => {context.dismissPanel(item)}}\r\n          selectedKey={context.selectedKey}\r\n          ariaLabel=\"NavMenu\"\r\n          groups={this.state.groups}\r\n        />\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NavMenu","import React, { Component } from \"react\";\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport NavMenu from \"./NavMenu\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nexport interface AppProps {\r\n}\r\n\r\nexport interface AppStates {\r\n    dismissPanel: () => void\r\n}\r\n\r\nexport default class MenuPanel extends Component<AppProps, AppStates> {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {context => (\r\n                    <Panel\r\n                        isOpen={context.isOpen}\r\n                        onDismiss={context.dismissPanel}\r\n                        type={PanelType.smallFluid}\r\n                        closeButtonAriaLabel=\"Close\"\r\n                        headerText=\"Menu\"\r\n                        >\r\n                        <NavMenu/>\r\n                    </Panel>\r\n                )}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}","import React, {Component, Suspense} from 'react';\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport history from './history';\r\nimport './App.css';\r\nimport CommandBarMain from \"./components/CommandBarMain\";\r\nimport MenuPanel from \"./components/MenuPanel\";\r\nimport { AppContext } from \"./contexts/AppContext\";\r\nimport socket from \"./socket\";\r\n// import { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nconst CharConvert = React.lazy(() => import('./components/CharConvert'));\r\nconst PageFormat = React.lazy(() => import('./components/PageFormat'));\r\nconst PageFormatG8 = React.lazy(() => import('./components/PageFormatG8'));\r\nconst TaoMauKhoiLuong = React.lazy(() => import('./components/TaoMauKhoiLuong'));\r\n\r\nexport interface AppState {\r\n  isOpen: boolean;\r\n  selectedKey: string;\r\n  dismissPanel: (item: any) => void\r\n}\r\n\r\nclass App extends Component<{}, AppState> {\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n    this.state = {\r\n      isOpen: false,\r\n      selectedKey: history.location.toString(),\r\n      dismissPanel: (item: any) => {\r\n        history.push(item.key)\r\n        this.setState({selectedKey: item.key})\r\n        this.setState({isOpen: false})\r\n      }\r\n    };\r\n  };\r\n  openPanel () { this.setState({ isOpen: true })};\r\n  dismissPanel () {this.setState({ isOpen: false })}\r\n  render() {\r\n    socket.on('elog', (data: any) => console.log(data));\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        <div className=\"App\">\r\n          <CommandBarMain view={this.openPanel.bind(this)}></CommandBarMain>\r\n          <MenuPanel/>\r\n          <Router history={history}>\r\n            <Suspense fallback=\"Đang tải\">\r\n                <section className=\"App-body\">\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route path=\"/charConvert\" component={CharConvert} />\r\n                    <Route path=\"/PageFormat\" component={PageFormat} />\r\n                    <Route path=\"/PageFormatG8\" component={PageFormatG8} />\r\n                    <Route path=\"/TaoMauKhoiLuong\" component={TaoMauKhoiLuong} />\r\n                  </Switch>\r\n                </section>\r\n              </Suspense>\r\n          </Router>\r\n        </div>\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n    </div>\r\n  );\r\n}\r\n// function SpinnerLoadinng() {\r\n//   return (\r\n//     <Spinner size={SpinnerSize.small} />\r\n//   )\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { initializeIcons } from \"office-ui-fabric-react/lib/Icons\";\r\nimport { init } from \"./api/nvExcel\";\r\n\r\ninitializeIcons();\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// const Office = window.Office;\r\n\r\nOffice.initialize = async () => {\r\n  await init();\r\n  ReactDOM.render(<App />, document.getElementById('root'));\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { wsObject } from \"./Eutils\";\r\nexport let ws: wsObject | null = null;\r\nexport async function init() {\r\n    ws = await new wsObject()\r\n}","// G8\r\nexport const BANG_CONG_TRINH = 'Công trình'\r\nexport const BANG_TONG_HOP_VAT_TU = 'Tổng hợp VT'\r\nexport const BANG_HAO_PHI_VAT_TU = 'HaoPhiVatTu'\r\nexport const HAO_PHI_VAT_TU_NAME = 'BẢNG TỔNG HỢP VẬT TƯ VÀ CHÊNH LỆCH GIÁ'\r\n","import io from 'socket.io-client';\r\n \r\nconst socket = io('https://localhost:8080');\r\n\r\nexport default socket;","import { AsyncConstructor } from 'async-constructor';\r\nimport { getPageType, getOrientationType } from \"./mapIndex\";\r\nimport { ws } from './nvExcel';\r\nimport { HAO_PHI_VAT_TU_NAME } from '../constants/named';\r\nexport function getLastRow(ws: any): Excel.Range {\r\n\tconst rangeA = ws.getRange('A:ZZ');\r\n\tconst lastRow = rangeA.find(\"*\", {\r\n\t\tcompleteMatch: true, // find will match the whole cell value\r\n\t\tmatchCase: false, // find will not match case\r\n\t\tsearchDirection: Excel.SearchDirection.backwards // find will start searching at the beginning of the range\r\n\t})\r\n\treturn lastRow\r\n}\r\nexport function getLastCol(ws: any): Excel.Range {\r\n\tconst rangeA = ws.getRange('A1:ZZ4');\r\n\tconst lastCol = rangeA.find(\"*\", {\r\n\t\tcompleteMatch: true, // find will match the whole cell value\r\n\t\tmatchCase: false, // find will not match case\r\n\t\tsearchDirection: Excel.SearchDirection.backwards // find will start searching at the beginning of the range\r\n\t})\r\n\treturn lastCol\r\n}\r\n\r\nexport interface addressTypes {\r\n\ttext: string;\r\n\tcol: string;\r\n\trow: string\r\n}\r\n\r\nexport class addressObj {\r\n\tsheet!: string;\r\n\ttext!: string;\r\n\tcell1: addressTypes = {\r\n\t\ttext: \"\",\r\n\t\tcol: \"\",\r\n\t\trow: \"\"\r\n\t};\r\n\tcell2: addressTypes = {\r\n\t\ttext: \"\",\r\n\t\tcol: \"\",\r\n\t\trow: \"\"\r\n\t}\r\n\tconstructor(txt: string) {\r\n\t\tthis.text = txt.replace(/(([^!]+)?)!/g, '');\r\n\t\tconst t = this.text.split(\":\")\r\n\t\tthis.cell1.text = t[0];\r\n\t\tthis.cell1.col = t[0].replace(/([0-9])+/g, \"\");\r\n\t\tthis.cell1.row = t[0].replace(/([A-Z]|[a-z])+/g, \"\");\r\n\t\tif (t[1]) {\r\n\t\t\tthis.cell2.text = t[1];\r\n\t\t\tthis.cell2.col = t[1].replace(/([0-9])+/g, \"\");\r\n\t\t\tthis.cell2.row = t[1].replace(/([A-Z]|[a-z])+/g, \"\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getWsInfo(wsName: string | null = null) {\r\n\tconst promise = new Promise((resolve, rejects) => {\r\n\t\ttry {\r\n\t\t\tExcel.run(async context => {\r\n\t\t\t\tlet ws: Excel.Worksheet = context.workbook.worksheets.getActiveWorksheet()\r\n\t\t\t\twsName ? ws = context.workbook.worksheets.getItem(wsName)\r\n\t\t\t\t\t: ws = context.workbook.worksheets.getActiveWorksheet();\r\n\t\t\t\tws.load('name');\r\n\t\t\t\tconst lastCol = getLastCol(ws);\r\n\t\t\t\tlastCol.load('address');\r\n\t\t\t\tawait context.sync();\r\n\t\t\t\tresolve({\r\n\t\t\t\t\tname: ws.name\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\trejects(error)\r\n\t\t}\r\n\t})\r\n\treturn promise\r\n}\r\n\r\nexport interface getLastColTypes {\r\n\twsName?: string | null;\r\n\tname?: string | null;\r\n}\r\nexport class wsObject extends AsyncConstructor {\r\n\tws: Excel.Worksheet | null = null;\r\n\tprivate context: Excel.RequestContext | null = null;\r\n\twsName: string | null = null;\r\n\tname!: string;\r\n\tlastCol!: addressTypes;\r\n\tlastRow!: addressTypes;\r\n\tselectedRange!: string;\r\n\tconstructor(wsName: string | null = null) {\r\n\t\tsuper(async () => {\r\n\t\t\tthis.wsName = wsName;\r\n\t\t\tawait this.initContext()\r\n\t\t\t\t.then(async x => {\r\n\t\t\t\t\tif (wsName) {\r\n\t\t\t\t\t\tawait this.isWsExits()\r\n\t\t\t\t\t\t\t.then(name => !name ? this.create().then(x => this.initWsInfo()) :\r\n\t\t\t\t\t\t\t\tthis.getWorksheet().then(x => this.initWsInfo().then(x => this.getWorksheet())));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait this.getActive().then(x => this.initWsInfo());\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t})\r\n\t}\r\n\tasync initContext() {\r\n\t\ttry {\r\n\t\t\tawait Excel.run(async context => {\r\n\t\t\t\tthis.context = context\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t}\r\n\t}\r\n\tasync initWsInfo() {\r\n\t\tconst rg = this.context!.workbook.getSelectedRange();\r\n\t\trg.load('address')\r\n\t\tthis.ws!.load('name');\r\n\t\tconst lastRow: Excel.Range = getLastRow(this.ws);\r\n\t\tconst lastCol: Excel.Range = getLastCol(this.ws);\r\n\t\tlastRow.load('address');\r\n\t\tlastCol.load('address');\r\n\t\tawait this.context!.sync();\r\n\t\tconst lastcolAd = new addressObj(lastCol.address);\r\n\t\tconst lastrowAd = new addressObj(lastRow.address);\r\n\t\tthis.lastCol = lastcolAd.cell1;\r\n\t\tthis.lastRow = lastrowAd.cell1;\r\n\t\tthis.name = this.ws!.name;\r\n\t\tthis.selectedRange = rg.address;\r\n\t}\r\n\tasync currentWs(name: string) {\r\n\t\tthis.wsName = name;\r\n\t\tthis.name = name;\r\n\t\tthis.getWorksheet(name).then(x => this.initWsInfo())\r\n\t}\r\n\tasync getWorksheet(newWS: string | null = null) {\r\n\t\tconst promise = new Promise(async (resolve, rejects) => {\r\n\t\t\tconst name = newWS ? newWS : this.wsName;\r\n\t\t\tthis.ws = this.context!.workbook.worksheets.getItemOrNullObject(name!);\r\n\t\t\tresolve()\r\n\t\t})\r\n\t\treturn promise\r\n\t}\r\n\tasync getActive() {\r\n\t\tthis.ws = this.context!.workbook.worksheets.getActiveWorksheet()\r\n\t}\r\n\tasync isWsExits() {\r\n\t\tconst promise = new Promise(async (resolve, rejects) => {\r\n\t\t\tconst ws = this.context!.workbook.worksheets.getItemOrNullObject(this.wsName!);\r\n\t\t\tws.load('name')\r\n\t\t\tawait this.context!.sync();\r\n\t\t\tresolve(ws.name)\r\n\t\t\tthis.name = ws.name;\r\n\t\t})\r\n\t\treturn promise\r\n\t}\r\n\tasync create() {\r\n\t\ttry {\r\n\t\t\tawait Excel.run(async context => {\r\n\t\t\t\tthis.ws = context.workbook.worksheets.add(this.wsName!);\r\n\t\t\t\tthis.ws.activate();\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t}\r\n\t}\r\n\tactivate() {\r\n\t\tthis.ws?.activate();\r\n\t}\r\n\tsetSheetValues() {\r\n\t\tconst rg = this.ws?.getRange(`A1:${this.lastCol.text}`);\r\n\t}\r\n\tasync getValues(address: string) {\r\n\t\tconst rg = this.ws?.getRange(address);\r\n\t\trg?.load('values');\r\n\t\tawait this.context?.sync();\r\n\t\treturn rg?.values;\r\n\t}\r\n\tasync getFomulas(address: string) {\r\n\t\tconst rg = this.ws?.getRange(address);\r\n\t\trg?.load('formulasR1C1');\r\n\t\tawait this.context?.sync();\r\n\t\treturn rg?.formulasR1C1;\r\n\t}\r\n\tasync addValues(address: string, values: any[][]) {\r\n\t\tconst rg = this.ws?.getRange(address);\r\n\t\trg!.values = values;\r\n\t}\r\n\tsetPrintAreabySelected() {\r\n\t\tthis.ws?.pageLayout.setPrintArea(this.selectedRange)\r\n\t}\r\n\tautoSetPrintArea() {\r\n\t\tthis.ws?.pageLayout.setPrintArea(\"A:\" + this.lastCol.col)\r\n\t}\r\n\tsetPrintArea(address: string) {\r\n\t\tthis.ws?.pageLayout.setPrintArea(address)\r\n\t}\r\n\tsetFont(fontName: string, address: string | undefined = undefined) {\r\n\t\tconst addr = address ? address : 'A:Z'\r\n\t\tthis.ws!.getRange('A:Z').format.font.name = fontName;\r\n\t}\r\n\tsetBlackAndWhite() {\r\n\t\tthis.ws!.pageLayout.blackAndWhite = true;\r\n\t}\r\n\tsetPageMargin(top: number, bottom: number, left: number, right: number) {\r\n\t\tthis.ws!.pageLayout.topMargin = top;\r\n\t\tthis.ws!.pageLayout.bottomMargin = bottom;\r\n\t\tthis.ws!.pageLayout.leftMargin = left;\r\n\t\tthis.ws!.pageLayout.rightMargin = right;\r\n\t}\r\n\tsetPaperType(paperType: string) {\r\n\t\tthis.ws!.pageLayout.paperSize = getPageType(paperType)\r\n\t}\r\n\tsetOrientation(ori: string) {\r\n\t\tthis.ws!.pageLayout.orientation = getOrientationType(ori)\r\n\t}\r\n\tsetCenter(hor: boolean = false, ver: boolean = false) {\r\n\t\tthis.ws!.pageLayout.centerHorizontally = hor;\r\n\t\tthis.ws!.pageLayout.centerVertically = ver;\r\n\t}\r\n\tsetPageZoom(hoz: number = 0, ver: number = 0) {\r\n\t\tif (hoz !== 0) this.ws!.pageLayout.zoom = { horizontalFitToPages: 1 };\r\n\t\tif (ver !== 0) this.ws!.pageLayout.zoom = { verticalFitToPages: 1 };\r\n\t}\r\n\tcolWidth(col: string, w: number) {\r\n\t\tthis.ws!.getRange(`${col}1`).format.columnWidth = w;\r\n\t}\r\n\tautoColWidth(col: string) {\r\n\t\tthis.ws!.getRange(`${col}:${col}`).format.autofitColumns();\r\n\t}\r\n\tautoRowsHeight(address: string) {\r\n\t\tthis.ws!.getRange(address).format.autofitRows();\r\n\t}\r\n\trowsHeight(address: string, h: number) {\r\n\t\tthis.ws!.getRange(address).format.rowHeight = h;\r\n\t}\r\n\tmergeCells(address: string) {\r\n\t\tthis.ws?.getRange(address).merge();\r\n\t}\r\n\tverCenter(address: string) {\r\n\t\tthis.ws!.getRange(address)!.format.verticalAlignment = 'Center'\r\n\t}\r\n\thorCenter(address: string) {\r\n\t\tthis.ws!.getRange(address)!.format.horizontalAlignment = 'Center'\r\n\t}\r\n\tsetBold(address: string) {\r\n\t\tthis.ws!.getRange(address)!.format.font.bold = true\r\n\t}\r\n\tsetWrapText(address: string) {\r\n\t\tthis.ws!.getRange(address)!.format.wrapText = true\r\n\t}\r\n\tunmergeCells(address: string) {\r\n\t\tthis.ws!.getRange(address).unmerge();\r\n\t}\r\n\tasync moveRange(from: string, to: string) {\r\n\t\tconst rg = this.ws!.getRange(from);\r\n\t\trg.load('values');\r\n\t\tawait this.context?.sync();\r\n\t\tthis.ws!.getRange(to).values = rg.values;\r\n\r\n\t}\r\n\tasync sheetSlice(values: any, tbName: string) {\r\n\t\tlet valuesMap: any[] = [];\r\n\t\tawait values.forEach((e: any[], i: number) => {\r\n\t\t\tif (e[0] === HAO_PHI_VAT_TU_NAME) {\r\n\t\t\t\tvaluesMap.push(i)\r\n\t\t\t}\r\n\t\t});\r\n\t\tvaluesMap.forEach(async (e, i) => {\r\n\t\t\tconst sheets = this.context!.workbook.worksheets;\r\n\t\t\tconsole.log(sheets);\r\n\t\t\tconst sheet = sheets.add();\r\n\t\t})\r\n\r\n\t}\r\n\tasync addSheet(name: string) {\r\n\t\ttry {\r\n\t\t\tawait Excel.run(async context => {\r\n\t\t\t\tconst sheets = context.workbook.worksheets;\r\n\t\t\t\tconst sheet = sheets.add(name);\r\n\t\t\t\tsheet.load('name');\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t}\r\n\r\n\t}\r\n\tasync getSelectedValues() {\r\n\t\tconst rg = this.context?.workbook.getSelectedRange();\r\n\t\trg?.load('values');\r\n\t\tawait this.context?.sync();\r\n\t\treturn rg?.values;\r\n\t}\r\n\tasync save() { }\r\n\tasync setCustomConditionalFormat(address: string, formula: string, color: string | null, bold: boolean, italic: boolean, border: boolean) {\r\n\t\tconst rg = this.ws?.getRange(address);\r\n\t\tconst conditionalFormat = rg?.conditionalFormats.add(Excel.ConditionalFormatType.custom);\r\n\t\tconditionalFormat!.custom.rule.formula = formula;\r\n\t\tif (color) conditionalFormat!.custom.format.font.color = color;\r\n\t\tconditionalFormat!.custom.format.font.bold = bold;\r\n\t\tconditionalFormat!.custom.format.font.italic = italic;\r\n\t\tif (border) {\r\n\t\t\tconditionalFormat!.custom.format.borders.getItem('EdgeBottom').style = 'Continuous';\r\n\t\t\tconditionalFormat!.custom.format.borders.getItem('EdgeLeft').style = 'Continuous';\r\n\t\t\tconditionalFormat!.custom.format.borders.getItem('EdgeRight').style = 'Continuous';\r\n\t\t\tconditionalFormat!.custom.format.borders.getItem('EdgeTop').style = 'Continuous';\r\n\t\t}\r\n\r\n\t}\r\n\tasync createTable(address: string, name: string, values: string[][] | null) {\r\n\t\tconst expensesTable = this.ws!.tables.add(address, true /*hasHeaders*/);\r\n\t\texpensesTable.name = name;\r\n\t\tif (values) expensesTable.rows.add(undefined, values)\r\n\t}\r\n}","declare var Excel: { \r\n    run: (arg0: (context: any) => Promise<void>) => any; \r\n    PaperType: { [x: string]: any; }; \r\n    PageOrientation: { [x: string]: any; }; \r\n    SearchDirection: { backwards: any; }; \r\n }\r\n\r\nexport function getPageType(key: any): Excel.PaperType {\r\n    return Excel.PaperType[key]\r\n}\r\nexport function getOrientationType(key: any): Excel.PageOrientation {\r\n    return Excel.PageOrientation[key]\r\n}"],"sourceRoot":""}