{"version":3,"sources":["../../src/components/Spinner/Spinner.types.ts","components/nvButton.tsx","../../src/DelayedRender.tsx","../../src/components/Spinner/Spinner.base.tsx","../../src/components/Spinner/Spinner.styles.tsx","../../src/components/Spinner/Spinner.tsx","components/PageFormatG8.tsx"],"names":["SpinnerSize","SpinnerType","NvDefButton","text","this","props","onClick","allowDisabledFocus","size","small","className","isLoading","iconName","Component","state","isRendered","componentDidMount","delay","_timeoutId","window","setTimeout","setState","componentWillUnmount","clearTimeout","render","only","children","defaultProps","getClassNames","classNamesFunction","type","ariaLabel","ariaLive","styles","label","theme","labelPosition","statusMessage","nativeProps","styleSize","undefined","large","medium","classNames","root","circle","role","DelayedRender","screenReaderText","GlobalClassNames","spinAnimation","memoize","transform","Spinner","styled","palette","display","flexDirection","alignItems","justifyContent","boxSizing","borderRadius","border","themeLight","borderTopColor","themePrimary","animationName","animationDuration","animationIterationCount","animationTimingFunction","selectors","xSmall","width","height","fonts","color","margin","textAlign","scope","PageFormatG8","_formatPage","a","console","log","ws","currentWs","BANG_CONG_TRINH","pageSize","orientation","autoInit","blackAndWhite","isSetFont","setFont","lastRow","row","getValues","vals","forEach","e","i","getRange","format","rowHeight","mergeCells","rowsHeight","setPrintArea","setBlackAndWhite","setPaperType","setOrientation","setPageZoom","setPageMargin","setCenter","BANG_TONG_HOP_VAT_TU","sheetSlice","HAO_PHI_VAT_TU_NAME","BANG_HAO_PHI_VAT_TU","colWidth","verCenter","horizontal","_formatCongTrinh","_formatTongHopVatTu","_formatHaoPhiVatTu","defaultChecked","onText","offText","onChange","_e","checked"],"mappings":"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","file":"static/js/5.7f8d36db.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Spinner}\n */\nexport interface ISpinner {}\n\n/**\n * Spinner component props.\n * {@docCategory Spinner}\n */\nexport interface ISpinnerProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the ISpinner interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ISpinner>;\n\n  /**\n   * Deprecated and will be removed at \\>= 2.0.0. Use `SpinnerSize` instead.\n   * @deprecated Use `SpinnerSize` instead.\n   */\n  // tslint:disable-next-line:deprecation\n  type?: SpinnerType;\n\n  /**\n   * The size of Spinner to render. \\{ extraSmall, small, medium, large \\}\n   * @defaultvalue SpinnerType.medium\n   */\n  size?: SpinnerSize;\n\n  /**\n   * The label to show next to the Spinner. Label updates will be announced to the screen readers.\n   * Use ariaLive to control politeness level.\n   */\n  label?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the Spinner.\n   */\n  className?: string;\n\n  /**\n   * Politeness setting for label update announcement.\n   * @defaultvalue polite\n   */\n  ariaLive?: 'assertive' | 'polite' | 'off';\n\n  /**\n   * Alternative status label for screen reader\n   */\n  ariaLabel?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ISpinnerStyleProps, ISpinnerStyles>;\n\n  /**\n   * The position of the label in regards of the spinner animation.\n   * @defaultvalue SpinnerLabelPosition.bottom\n   */\n  labelPosition?: SpinnerLabelPosition;\n}\n\n/**\n * Possible variations of the spinner circle size.\n * {@docCategory Spinner}\n */\nexport enum SpinnerSize {\n  /**\n   * 12px Spinner diameter\n   */\n  xSmall = 0,\n\n  /**\n   * 16px Spinner diameter\n   */\n  small = 1,\n\n  /**\n   * 20px Spinner diameter\n   */\n  medium = 2,\n\n  /**\n   * 28px Spinner diameter\n   */\n  large = 3,\n}\n\n/**\n * Possible locations of the label in regards to the spinner\n * @defaultvalue bottom\n * {@docCategory Spinner}\n */\nexport type SpinnerLabelPosition = 'top' | 'right' | 'bottom' | 'left';\n\n/**\n * Deprecated at v2.0.0, use `SpinnerSize` instead.\n * @deprecated Use `SpinnerSize` instead.\n * {@docCategory Spinner}\n */\nexport enum SpinnerType {\n  /**\n   * Deprecated and will be removed at \\>= 2.0.0. Use `SpinnerSize.medium` instead.\n   * @deprecated Use `SpinnerSize.medium` instead.\n   */\n  normal = 0,\n\n  /**\n   * Deprecated and will be removed at \\>= 2.0.0. Use `SpinnerSize.large` instead.\n   * @deprecated Use `SpinnerSize.large` instead.\n   */\n  large = 1,\n}\n\n/**\n * The props needed to construct styles.\n * This represents the simplified set of immutable things which control the class names.\n * {@docCategory Spinner}\n */\nexport interface ISpinnerStyleProps {\n  /** Theme provided by High-Order Component. */\n  theme: ITheme;\n\n  /** Size of the spinner animation. */\n  size?: SpinnerSize;\n\n  /** CSS class name for the component attached to the root stylable area. */\n  className?: string;\n\n  /** Position of the label in regards to the spinner animation. */\n  labelPosition?: SpinnerLabelPosition;\n}\n\n/**\n * Represents the stylable areas of the control.\n * {@docCategory Spinner}\n */\nexport interface ISpinnerStyles {\n  /** Styles for the root element. Refers to the wrapper containing both the circle and the label. */\n  root?: IStyle;\n\n  /** Styles for the spinner circle animation. */\n  circle?: IStyle;\n\n  /** Styles for the label accompanying the circle. */\n  label?: IStyle;\n\n  /** Styles for the hidden helper element to aid with screen readers. */\n  screenReaderText?: IStyle;\n}\n","import React, { Component } from \"react\";\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nexport interface AppProps {\r\n    text: string;\r\n    onClick: () => void;\r\n    isLoading: boolean\r\n}\r\n\r\nexport class NvDefButton extends Component<AppProps> {\r\n    // constructor(props: any) {\r\n    //     super(props)\r\n    // }\r\n    render() {\r\n        return( \r\n            <div><DefaultButton text={this.props.text} onClick={this.props.onClick} allowDisabledFocus>\r\n                    <Spinner size={SpinnerSize.small} className={this.props.isLoading ? '' : 'hidden'} /> \r\n                    <Icon iconName=\"CompassNW\" className=\"fade-in\" />\r\n                </DefaultButton>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// tslint:disable-next-line:deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n","import * as React from 'react';\nimport { ISpinnerProps, ISpinnerStyleProps, ISpinnerStyles, SpinnerType, SpinnerSize } from './Spinner.types';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\n\nconst getClassNames = classNamesFunction<ISpinnerStyleProps, ISpinnerStyles>();\n\nexport class SpinnerBase extends React.Component<ISpinnerProps, any> {\n  public static defaultProps: ISpinnerProps = {\n    size: SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom',\n  };\n\n  public render() {\n    // tslint:disable-next-line:deprecation\n    const { type, size, ariaLabel, ariaLive, styles, label, theme, className, labelPosition } = this.props;\n    const statusMessage = ariaLabel;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['size']);\n\n    // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the\n    // ISpinnerStyleProps, we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType\n    // finally goes away we should delete this.\n    let styleSize = size;\n    if (styleSize === undefined && type !== undefined) {\n      // tslint:disable-next-line:deprecation\n      styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n    }\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      size: styleSize,\n      className,\n      labelPosition,\n    });\n\n    return (\n      <div {...nativeProps} className={classNames.root}>\n        <div className={classNames.circle} />\n        {label && <div className={classNames.label}>{label}</div>}\n        {statusMessage && (\n          <div role=\"status\" aria-live={ariaLive}>\n            <DelayedRender>\n              <div className={classNames.screenReaderText}>{statusMessage}</div>\n            </DelayedRender>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { ISpinnerStyleProps, ISpinnerStyles, SpinnerSize } from './Spinner.types';\nimport { hiddenContentStyle, keyframes, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Spinner',\n  circle: 'ms-Spinner-circle',\n  label: 'ms-Spinner-label',\n};\n\nconst spinAnimation = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  }),\n);\n\nexport const getStyles = (props: ISpinnerStyleProps): ISpinnerStyles => {\n  const { theme, size, className, labelPosition } = props;\n\n  const { palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      labelPosition === 'top' && {\n        flexDirection: 'column-reverse',\n      },\n      labelPosition === 'right' && {\n        flexDirection: 'row',\n      },\n      labelPosition === 'left' && {\n        flexDirection: 'row-reverse',\n      },\n      className,\n    ],\n    circle: [\n      classNames.circle,\n      {\n        boxSizing: 'border-box',\n        borderRadius: '50%',\n        border: '1.5px solid ' + palette.themeLight,\n        borderTopColor: palette.themePrimary,\n        animationName: spinAnimation(),\n        animationDuration: '1.3s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'cubic-bezier(.53,.21,.29,.67)',\n        selectors: {\n          [HighContrastSelector]: {\n            borderTopColor: 'Highlight',\n          },\n        },\n      },\n      size === SpinnerSize.xSmall && [\n        'ms-Spinner--xSmall',\n        {\n          width: 12,\n          height: 12,\n        },\n      ],\n      size === SpinnerSize.small && [\n        'ms-Spinner--small',\n        {\n          width: 16,\n          height: 16,\n        },\n      ],\n      size === SpinnerSize.medium && [\n        'ms-Spinner--medium',\n        {\n          width: 20,\n          height: 20,\n        },\n      ],\n      size === SpinnerSize.large && [\n        'ms-Spinner--large',\n        {\n          width: 28,\n          height: 28,\n        },\n      ],\n    ],\n    label: [\n      classNames.label,\n      theme.fonts.small,\n      {\n        color: palette.themePrimary,\n        margin: '8px 0 0',\n        textAlign: 'center',\n      },\n      labelPosition === 'top' && {\n        margin: '0 0 8px',\n      },\n      labelPosition === 'right' && {\n        margin: '0 0 0 8px',\n      },\n      labelPosition === 'left' && {\n        margin: '0 8px 0 0',\n      },\n    ],\n    screenReaderText: hiddenContentStyle,\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SpinnerBase } from './Spinner.base';\nimport { getStyles } from './Spinner.styles';\nimport { ISpinnerProps, ISpinnerStyles, ISpinnerStyleProps } from './Spinner.types';\n\nexport const Spinner: React.FunctionComponent<ISpinnerProps> = styled<\n  ISpinnerProps,\n  ISpinnerStyleProps,\n  ISpinnerStyles\n>(SpinnerBase, getStyles, undefined, { scope: 'Spinner' });\n","import React, { Component } from \"react\";\r\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { ws } from \"../api/nvExcel\";\r\nimport { NvDefButton } from \"./nvButton\";\r\nimport { \r\n\tBANG_CONG_TRINH,\r\n\tBANG_TONG_HOP_VAT_TU,\r\n\tBANG_HAO_PHI_VAT_TU,\r\n\tHAO_PHI_VAT_TU_NAME\r\n} from \"../constants/named\";\r\n\r\nexport interface AppProps {\r\n}\r\nexport interface AppStates {\r\n\tpageSize: string;\r\n\torientation: string;\r\n\tautoInit: boolean;\r\n\tblackAndWhite: boolean;\r\n\tisSetFont: boolean;\r\n}\r\n\r\nexport interface orientationOptions {\r\n\tkey: string,\r\n\ttext: string,\r\n\tvalue: Excel.PageOrientation\r\n}\r\nexport class PageFormatG8 extends Component<AppProps, AppStates> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpageSize: 'a3',\r\n\t\t\torientation: 'portrait',\r\n\t\t\tautoInit: false,\r\n\t\t\tblackAndWhite: true,\r\n\t\t\tisSetFont: false\r\n\t\t}\r\n\t}\r\n\t_formatPage = async () => {\r\n\t\tconsole.log(ws);\r\n\t\tawait ws?.currentWs(BANG_CONG_TRINH)\r\n\t\tconsole.log(ws);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tasync _formatCongTrinh() {\r\n\t\tawait ws?.currentWs(BANG_CONG_TRINH)\r\n\t\tawait ws?.setFont('Times New Roman', `A1:Z${ws.lastRow.row}`);\r\n\t\tconst vals = await ws?.getValues(`D1:D${ws.lastRow.row}`);\r\n\t\tvals?.forEach((e, i) => {\r\n\t\t\tif (e[0] === 'T*') {\r\n\t\t\t\tws!.ws!.getRange(`D${i+1}`).format.rowHeight = 0;\r\n\t\t\t}\r\n\t\t})\r\n\t\tws?.mergeCells('A1:Z1');\r\n\t\tws?.mergeCells('A2:Z2');\r\n\t\tws?.mergeCells('A3:Z3');\r\n\t\tws?.rowsHeight('A3', 0);\r\n\t\tawait ws?.getValues('A1:A2');\r\n\t\tws?.setPrintArea('A:W');\r\n\t\tws?.setBlackAndWhite();\r\n\t\tws?.setPaperType('a4');\r\n\t\tws?.setOrientation('landscape');\r\n\t\tws?.setPageZoom(1);\r\n\t\tws?.setPageMargin(50, 40, 40, 40);\r\n\t\tws?.setCenter(true);\r\n\t}\r\n\tasync _formatTongHopVatTu() {\r\n\t\tawait ws?.currentWs(BANG_TONG_HOP_VAT_TU)\r\n\t\t// ws?.setPrintArea('A:P');\r\n\t\t// ws?.setFont('Times New Roman');\r\n\t\t// ws?.setBlackAndWhite();\r\n\t\t// ws?.setPaperType('a4');\r\n\t\t// ws?.setOrientation('portrait');\r\n\t\t// ws?.setPageZoom(1);\r\n\t\t// ws?.setPageMargin(49, 40, 50, 40);\r\n\t\t// ws?.setCenter(true);\r\n\t\t// ws?.colWidth('B', 0);\r\n\t\t// ws?.colWidth('J', 0);\r\n\t\t// ws?.colWidth('E', 86);\r\n\t\t// ws?.colWidth('O', 86);\r\n\t\t// ws?.colWidth('P', 86);\r\n\t\t// ws?.rowsHeight(`A1:A3`, 18);\r\n\t\t// ws?.autoRowsHeight(`A5:A${ws.lastRow.row}`);\r\n\t\t// ws?.verCenter(`A4:P${ws.lastRow.row}`);\r\n\t\t// ws?.unmergeCells('A3:R3');\r\n\t\tconst vals = await ws?.getValues(`A1:P${ws.lastRow.row}`);\r\n\t\tawait ws?.sheetSlice(vals, HAO_PHI_VAT_TU_NAME)\r\n\t\t// await ws?.moveRange('A3', 'U3');\r\n\t\t// await ws?.moveRange('A4:R4', 'A3:R3');\r\n\t}\r\n\tasync _formatHaoPhiVatTu() {\r\n\t\tawait ws?.currentWs(BANG_HAO_PHI_VAT_TU);\r\n\t\tws?.setPrintArea('A:P');\r\n\t\tws?.setFont('Times New Roman');\r\n\t\tws?.setBlackAndWhite();\r\n\t\tws?.setPaperType('a4');\r\n\t\tws?.setOrientation('portrait');\r\n\t\tws?.setPageZoom(1);\r\n\t\tws?.setPageMargin(49, 40, 50, 40);\r\n\t\tws?.setCenter(true);\r\n\t\tws?.colWidth('B', 0);\r\n\t\tws?.colWidth('J', 0);\r\n\t\tws?.colWidth('E', 86)\r\n\t\tws?.colWidth('O', 86)\r\n\t\tws?.colWidth('P', 86)\r\n\t\tws?.rowsHeight(`A1:A${ws.lastRow.row}`, 18)\r\n\t\tws?.verCenter(`A4:P${ws.lastRow.row}`)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"ms-Grid\">\r\n\t\t\t\t<Separator>Định dạng trạng in G8</Separator>\r\n\t\t\t\t<div className=\"ms-Grid-row\">\r\n\t\t\t\t\t<div className=\"ms-Grid-col ms-sm12 ms-lg12 mt-8\">\r\n\t\t\t\t\t\t<Stack className=\"btn-container\" horizontal>\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng dự toán hạng mục công trình\" onClick={this._formatPage} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng công trình\" onClick={this._formatCongTrinh} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng tổng hợp vật tư\" onClick={this._formatTongHopVatTu} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng hao phí vật tư\" onClick={this._formatHaoPhiVatTu} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng giá tháng\" onClick={this._formatPage} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng chiết tính\" onClick={this._formatPage} isLoading={false} />\r\n\t\t\t\t\t\t\t<NvDefButton text=\"Bảng dự thầu\" onClick={this._formatPage} isLoading={false} />\r\n\t\t\t\t\t\t\t<Toggle className=\"mt-8\" \r\n\t\t\t\t\t\t\t\tdefaultChecked={this.state.isSetFont} \r\n\t\t\t\t\t\t\t\tonText=\"Ẩn cột vật tư trong bảng công trình\" \r\n\t\t\t\t\t\t\t\toffText=\"Ẩn cột vật tư trong bảng công trình\" \r\n\t\t\t\t\t\t\t\tonChange={(_e, checked) => this.setState({isSetFont: checked || false})} />\r\n\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n};\r\nexport default PageFormatG8"],"sourceRoot":""}